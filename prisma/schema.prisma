// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  kakao_id        String   @unique
  nickname        String
  profile_img_url String
  is_author       Boolean?
  description     String?
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  userKeyword UserKeyword[]
  post        Post[]

  @@map("users")
}

model UserKeyword {
  id         Int      @id @default(autoincrement())
  user_id    Int
  keyword_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  users    User    @relation(fields: [user_id], references: [id])
  keywords Keyword @relation(fields: [keyword_id], references: [id])

  @@map("user_keywords")
}

model Category {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  keyword Keyword[]

  @@map("categories")
}

model Keyword {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  category_id Int
  is_main     Boolean
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  userkeyword UserKeyword[]
  postkeyword postKeyword[]

  categories Category @relation(fields: [category_id], references: [id])

  @@map("keywords")
}

model Post {
  id            Int      @id @default(autoincrement())
  title         String
  body          String
  summary       String
  subtitle      String
  user_id       Int
  is_published  Boolean
  thumbnail_url String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  postkeyword postKeyword[]
  bookpost    BookPost[]
  users       User          @relation(fields: [user_id], references: [id])

  @@map("posts")
}

model Book {
  id            Int      @id @default(autoincrement())
  title         String
  user_id       String
  bookcover_url String
  description   String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())

  bookpost BookPost[]

  @@map("books")
}

model BookPost {
  id         Int      @id @default(autoincrement())
  post_id    Int
  book_id    Int
  sequence   Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  books Book @relation(fields: [book_id], references: [id])
  posts Post @relation(fields: [post_id], references: [id])

  @@map("book_posts")
}

model postKeyword {
  id         Int      @id @default(autoincrement())
  post_id    Int
  keyword_id Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  posts    Post    @relation(fields: [post_id], references: [id])
  keywords Keyword @relation(fields: [keyword_id], references: [id])

  @@map("post_keywords")
}
